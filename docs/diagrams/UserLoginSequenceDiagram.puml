@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":UserLoginCommandParser" as UserLoginCommandParser LOGIC_COLOR
participant "u:User" as User LOGIC_COLOR
participant "l:UserLoginCommand" as UserLoginCommand LOGIC_COLOR
participant "result:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "model:Model" as Model MODEL_COLOR
end box
[-> LogicManager : execute(login --user user1 ~--password myPassword)
activate LogicManager

LogicManager -> AddressBookParser : parseCommand(login --user user1 ~--password myPassword)
activate AddressBookParser

create UserLoginCommandParser
AddressBookParser -> UserLoginCommandParser
activate UserLoginCommandParser

UserLoginCommandParser --> AddressBookParser
deactivate UserLoginCommandParser

AddressBookParser -> UserLoginCommandParser : parse("--user user1 ~--password myPassword")
activate UserLoginCommandParser

create User
UserLoginCommandParser -> User : User(user1, myPassword)
activate User

User --> UserLoginCommandParser
deactivate User

create UserLoginCommand
UserLoginCommandParser -> UserLoginCommand : UserLoginCommand(u)
activate UserLoginCommand

UserLoginCommand --> UserLoginCommandParser
deactivate UserLoginCommand

UserLoginCommandParser --> AddressBookParser : l
deactivate UserLoginCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
UserLoginCommandParser -[hidden]-> AddressBookParser
destroy UserLoginCommandParser

AddressBookParser --> LogicManager : l
deactivate AddressBookParser

LogicManager -> UserLoginCommand : execute(model)
activate UserLoginCommand

UserLoginCommand -> Model : getUserLoginStatus()
activate Model

Model --> UserLoginCommand : isLoggedIn
deactivate Model

UserLoginCommand -> Model : userMatches()
activate Model

Model --> UserLoginCommand : userMatches
deactivate Model

UserLoginCommand -> Model : setLoginSuccess()
activate Model

UserLoginCommand -> Model : updateFilteredPersonList()
deactivate Model

create CommandResult
UserLoginCommand -> CommandResult
activate CommandResult

CommandResult --> UserLoginCommand
deactivate CommandResult

UserLoginCommand --> LogicManager : result
deactivate UserLoginCommand
UserLoginCommand -[hidden]-> LogicManager : result
destroy UserLoginCommand

[<--LogicManager : result
deactivate LogicManager
@enduml
